// ****************************************************************************
//
//          Aevol - An in silico experimental evolution platform
//
// ****************************************************************************
// 
// Copyright: See the AUTHORS file provided with the package or <www.aevol.fr>
// Web: http://www.aevol.fr/
// E-mail: See <http://www.aevol.fr/contact/>
// Original Authors : Guillaume Beslon, Carole Knibbe, David Parsons
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
//*****************************************************************************




// =================================================================
//                              Libraries
// =================================================================
#include <string.h>



// =================================================================
//                            Project Files
// =================================================================
#include "Test_ae_dna.h"
#include <ae_macros.h>
#include <ae_genetic_unit.h>
#include <ae_rna.h>
#include <ae_protein.h>
#include <ae_params_mut.h>
#include <ae_individual.h>



// ===========================================================================
//                             Declare Used Namespaces
// ===========================================================================




//############################################################################
//                                                                           #
//                         Class Test_ae_dna                                 #
//                                                                           #
//############################################################################
CPPUNIT_TEST_SUITE_REGISTRATION( Test_ae_dna );

// ===========================================================================
//                               Static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
Test_ae_dna::Test_ae_dna( void )
{
}

// ===========================================================================
//                                  Destructors
// ===========================================================================
Test_ae_dna::~Test_ae_dna( void )
{
}

// ===========================================================================
//                                   Operators
// ===========================================================================

// ===========================================================================
//                                 Public Methods
// ===========================================================================
void Test_ae_dna::setUp( void )
{
  // Build indiv1
  ae_params_mut params_mut;
  char * gu1_genome = new char [101];
  char * gu2_genome = new char [101];
  for (int32_t i=0;i<50;i++)
  {
    gu1_genome[i]='1';
    gu1_genome[i+50]='1';
    gu2_genome[i]='2';
    gu2_genome[i+50]='2';

  }
  gu1_genome[100]=0;
  gu2_genome[100]=0;
  
  char * gu3 = new char[3713];
  sprintf(gu
  gu3[3712]=0;
  
  char * gu4 = new char[3269];
  sprintf(gu
  gu4[3268]=0;
  
  indiv1 = new ae_individual(NULL, NULL, NULL, &params_mut, 1.0, 10, 100, false, 1, 0);
  //indiv1->add_GU(gu1_genome, strlen(gu1_genome));
  indiv1->add_GU(gu3, strlen(gu3));
  indiv1->add_GU(gu4, strlen(gu4));
  dna1=indiv1->get_genetic_unit(0)->get_dna();
  dna2=indiv1->get_genetic_unit(1)->get_dna();
}

void Test_ae_dna::tearDown( void )
{
  delete indiv1;
}

void Test_ae_dna::test1( void )
{
  // Check genome size
  //CPPUNIT_ASSERT(indiv1->get_genetic_unit(0)->get_dna()->get_length()==100);

  
  dna1->inter_GU_ABCDE_to_ACDBE(1809,2554,1238);
  //dna1->inter_GU_ABCDE_to_BDCAE(10,20,60);
  
  printf("\n");
  for (int32_t i=0;i<=dna1->get_length();i++) printf("%c",dna1->get_data()[i]);
  printf("\n");
  for (int32_t i=0;i<=dna2->get_length();i++) printf("%c",dna2->get_data()[i]);
  printf("\n");
  
  
}

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                              Non inline accessors
// ===========================================================================
